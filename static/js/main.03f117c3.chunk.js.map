{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useEffect","anime","timeline","easing","duration","add","targets","visibility","strokeDashoffset","setDashoffset","opacity","value","loop","delay","el","i","width","translateX","viewWidth","Math","max","document","documentElement","clientWidth","window","innerWidth","viewHeight","clientHeight","innerHeight","getRandomY","floor","random","toString","className","Array","map","_","cx","cy","r","stroke","strokeWidth","fill","style","left","top","height","viewBox","xmlns","id","maskUnits","x","y","d","mask","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.03f117c3.chunk.js","sourcesContent":["import \"./App.css\";\nimport anime from \"animejs\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n  /* Timeline for animejs animations of name and links */\n  useEffect(() => {\n    const nameTimeline = anime.timeline({\n      easing: \"easeOutExpo\",\n      duration: 300,\n    });\n\n    nameTimeline\n      .add({\n        targets: \".name\",\n        visibility: \"visibile\",\n      })\n      .add({\n        targets: \".name path\",\n        strokeDashoffset: [anime.setDashoffset, 0],\n        easing: \"easeInOutSine\",\n        duration: 2500,\n      })\n      .add({\n        targets: \".links\",\n        opacity: 1,\n        duration: 1500,\n        easing: \"easeInOutSine\",\n      });\n\n    anime({\n      targets: \"night-sky .star\",\n      opacity: [\n        { duration: 700, value: \"0\" },\n        { duration: 700, value: \"1\" },\n      ],\n      easing: \"linear\",\n      loop: true,\n      delay: (el, i) => 50 * i,\n    });\n\n    anime({\n      targets: \".shooting-stars .wish\",\n      easing: \"linear\",\n      loop: true,\n      delay: (el, i) => 2000 * i,\n      opacity: [{ duration: 1500, value: \"1\" }],\n      width: [\n        {\n          value: \"150px\",\n        },\n        {\n          value: \"0px\",\n        },\n      ],\n      translateX: 350,\n    });\n  }, []);\n\n  const viewWidth = Math.max(\n    document.documentElement.clientWidth,\n    window.innerWidth || 0\n  );\n  const viewHeight = Math.max(\n    document.documentElement.clientHeight,\n    window.innerHeight || 0\n  );\n  const getRandomX = () =>\n    Math.floor(Math.random() * Math.floor(viewWidth)).toString();\n  const getRandomY = () =>\n    Math.floor(Math.random() * Math.floor(viewHeight)).toString();\n\n  return (\n    <div className=\"App\">\n      <svg className=\"night-sky\">\n        {[...Array(75)].map((_, i) => (\n          <circle\n            cx={getRandomX()}\n            cy={getRandomY()}\n            r={Math.random() + 1 * 0.5 * 0.4}\n            stroke=\"none\"\n            strokeWidth=\"0\"\n            fill=\"white\"\n            key={i}\n            className=\"star\"\n          />\n        ))}\n      </svg>\n      <div className=\"shooting-stars\">\n        {[...Array(60)].map((_, i) => (\n          <div\n            className=\"wish\"\n            key={i}\n            style={{ left: `${getRandomY()}px`, top: `${getRandomY()}px` }}\n          />\n        ))}\n      </div>\n      <div className=\"name-nav fit-height vflex vc hc\">\n        <svg\n          visibility=\"hidden\"\n          className=\"name mb\"\n          width=\"450\"\n          height=\"55\"\n          viewBox=\"0 0 210 26\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <mask\n            id=\"path-1-outside-1\"\n            maskUnits=\"userSpaceOnUse\"\n            x=\"0\"\n            y=\"0\"\n            width=\"210\"\n            height=\"26\"\n            fill=\"black\"\n          >\n            <rect fill=\"white\" width=\"210\" height=\"26\" />\n            <path d=\"M17.7411 18.8303H7.58019L5.29814 24.6915H2L11.2614 2.23393H14.0599L23.338 24.6915H20.0565L17.7411 18.8303ZM8.54631 16.3933H16.7917L12.6607 5.88946L8.54631 16.3933Z\" />\n            <path d=\"M29.4679 24.6915H26.3863V1H29.4679V24.6915Z\" />\n            <path d=\"M37.7632 24.6915H34.6816V1H37.7632V24.6915Z\" />\n            <path d=\"M53.8374 24.6915C53.6598 24.3625 53.5154 23.7764 53.4044 22.9332C51.9718 24.3111 50.2617 25 48.2739 25C46.4971 25 45.0369 24.5373 43.8931 23.6118C42.7604 22.6761 42.194 21.4936 42.194 20.0643C42.194 18.3265 42.9047 16.9794 44.3261 16.0231C45.7587 15.0566 47.7686 14.5733 50.3561 14.5733H53.3544V13.2622C53.3544 12.2648 53.0323 11.473 52.3883 10.8869C51.7442 10.2905 50.7947 9.99229 49.5399 9.99229C48.4405 9.99229 47.5188 10.2494 46.7748 10.7635C46.0307 11.2776 45.6587 11.8997 45.6587 12.6298H42.5605C42.5605 11.7969 42.877 10.9949 43.5099 10.2236C44.154 9.44216 45.0202 8.82519 46.1085 8.37275C47.2079 7.92031 48.4127 7.69409 49.7231 7.69409C51.7997 7.69409 53.4266 8.17738 54.6037 9.14396C55.7808 10.1003 56.3916 11.4216 56.436 13.108V20.7892C56.436 22.3213 56.647 23.5398 57.069 24.4447V24.6915H53.8374ZM48.7237 22.5167C49.6898 22.5167 50.6059 22.2853 51.4721 21.8226C52.3383 21.3599 52.9657 20.7584 53.3544 20.018V16.5938H50.9391C47.1634 16.5938 45.2756 17.617 45.2756 19.6632C45.2756 20.5578 45.5976 21.2571 46.2417 21.7609C46.8858 22.2648 47.7131 22.5167 48.7237 22.5167Z\" />\n            <path d=\"M64.1816 8.00257L64.2816 10.1003C65.6586 8.49614 67.4575 7.69409 69.6785 7.69409C73.4875 7.69409 75.4086 9.6838 75.4419 13.6632V24.6915H72.3603V13.6478C72.3492 12.4447 72.0494 11.5553 71.4608 10.9794C70.8834 10.4036 69.9784 10.1157 68.7457 10.1157C67.7463 10.1157 66.869 10.3625 66.1139 10.856C65.3587 11.3496 64.7702 11.9974 64.3482 12.7995V24.6915H61.2666V8.00257H64.1816Z\" />\n            <path d=\"M102.743 14.3111H92.2325V22.2699H104.442V24.6915H89.0343V2.23393H104.276V4.67095H92.2325V11.8895H102.743V14.3111Z\" />\n            <path d=\"M111.288 24.6915H108.207V8.00257H111.288V24.6915ZM107.957 3.57584C107.957 3.11311 108.107 2.72237 108.407 2.4036C108.718 2.08483 109.173 1.92545 109.773 1.92545C110.372 1.92545 110.828 2.08483 111.138 2.4036C111.449 2.72237 111.605 3.11311 111.605 3.57584C111.605 4.03856 111.449 4.42416 111.138 4.73265C110.828 5.04113 110.372 5.19537 109.773 5.19537C109.173 5.19537 108.718 5.04113 108.407 4.73265C108.107 4.42416 107.957 4.03856 107.957 3.57584Z\" />\n            <path d=\"M122.182 20.8201L126.646 8.00257H129.795L123.332 24.6915H120.983L114.453 8.00257H117.602L122.182 20.8201Z\" />\n            <path d=\"M143.62 24.6915C143.443 24.3625 143.298 23.7764 143.187 22.9332C141.755 24.3111 140.044 25 138.057 25C136.28 25 134.82 24.5373 133.676 23.6118C132.543 22.6761 131.977 21.4936 131.977 20.0643C131.977 18.3265 132.687 16.9794 134.109 16.0231C135.541 15.0566 137.551 14.5733 140.139 14.5733H143.137V13.2622C143.137 12.2648 142.815 11.473 142.171 10.8869C141.527 10.2905 140.577 9.99229 139.323 9.99229C138.223 9.99229 137.302 10.2494 136.557 10.7635C135.813 11.2776 135.441 11.8997 135.441 12.6298H132.343C132.343 11.7969 132.66 10.9949 133.293 10.2236C133.937 9.44216 134.803 8.82519 135.891 8.37275C136.991 7.92031 138.195 7.69409 139.506 7.69409C141.582 7.69409 143.209 8.17738 144.386 9.14396C145.564 10.1003 146.174 11.4216 146.219 13.108V20.7892C146.219 22.3213 146.43 23.5398 146.852 24.4447V24.6915H143.62ZM138.506 22.5167C139.473 22.5167 140.389 22.2853 141.255 21.8226C142.121 21.3599 142.748 20.7584 143.137 20.018V16.5938H140.722C136.946 16.5938 135.058 17.617 135.058 19.6632C135.058 20.5578 135.38 21.2571 136.024 21.7609C136.669 22.2648 137.496 22.5167 138.506 22.5167Z\" />\n            <path d=\"M153.948 22.3625H164.492V24.6915H150.183V22.5938L160.128 10.3625H150.333V8.00257H163.992V10.0231L153.948 22.3625Z\" />\n            <path d=\"M171.321 24.6915H168.24V8.00257H171.321V24.6915ZM167.99 3.57584C167.99 3.11311 168.14 2.72237 168.44 2.4036C168.75 2.08483 169.206 1.92545 169.805 1.92545C170.405 1.92545 170.86 2.08483 171.171 2.4036C171.482 2.72237 171.638 3.11311 171.638 3.57584C171.638 4.03856 171.482 4.42416 171.171 4.73265C170.86 5.04113 170.405 5.19537 169.805 5.19537C169.206 5.19537 168.75 5.04113 168.44 4.73265C168.14 4.42416 167.99 4.03856 167.99 3.57584Z\" />\n            <path d=\"M187.396 24.6915C187.218 24.3625 187.073 23.7764 186.962 22.9332C185.53 24.3111 183.82 25 181.832 25C180.055 25 178.595 24.5373 177.451 23.6118C176.318 22.6761 175.752 21.4936 175.752 20.0643C175.752 18.3265 176.463 16.9794 177.884 16.0231C179.317 15.0566 181.327 14.5733 183.914 14.5733H186.912V13.2622C186.912 12.2648 186.59 11.473 185.946 10.8869C185.302 10.2905 184.353 9.99229 183.098 9.99229C181.999 9.99229 181.077 10.2494 180.333 10.7635C179.589 11.2776 179.217 11.8997 179.217 12.6298H176.119C176.119 11.7969 176.435 10.9949 177.068 10.2236C177.712 9.44216 178.578 8.82519 179.667 8.37275C180.766 7.92031 181.971 7.69409 183.281 7.69409C185.358 7.69409 186.985 8.17738 188.162 9.14396C189.339 10.1003 189.95 11.4216 189.994 13.108V20.7892C189.994 22.3213 190.205 23.5398 190.627 24.4447V24.6915H187.396ZM182.282 22.5167C183.248 22.5167 184.164 22.2853 185.03 21.8226C185.896 21.3599 186.524 20.7584 186.912 20.018V16.5938H184.497C180.721 16.5938 178.834 17.617 178.834 19.6632C178.834 20.5578 179.156 21.2571 179.8 21.7609C180.444 22.2648 181.271 22.5167 182.282 22.5167Z\" />\n            <path d=\"M197.74 8.00257L197.84 10.1003C199.217 8.49614 201.016 7.69409 203.237 7.69409C207.046 7.69409 208.967 9.6838 209 13.6632V24.6915H205.918V13.6478C205.907 12.4447 205.607 11.5553 205.019 10.9794C204.441 10.4036 203.536 10.1157 202.304 10.1157C201.304 10.1157 200.427 10.3625 199.672 10.856C198.917 11.3496 198.328 11.9974 197.906 12.7995V24.6915H194.825V8.00257H197.74Z\" />\n          </mask>\n          <path\n            d=\"M17.7411 18.8303H7.58019L5.29814 24.6915H2L11.2614 2.23393H14.0599L23.338 24.6915H20.0565L17.7411 18.8303ZM8.54631 16.3933H16.7917L12.6607 5.88946L8.54631 16.3933Z\"\n            stroke=\"white\"\n            strokeWidth=\"2\"\n            mask=\"url(#path-1-outside-1)\"\n          />\n          <path\n            d=\"M29.4679 24.6915H26.3863V1H29.4679V24.6915Z\"\n            stroke=\"white\"\n            strokeWidth=\"2\"\n            mask=\"url(#path-1-outside-1)\"\n          />\n          <path\n            d=\"M37.7632 24.6915H34.6816V1H37.7632V24.6915Z\"\n            stroke=\"white\"\n            strokeWidth=\"2\"\n            mask=\"url(#path-1-outside-1)\"\n          />\n          <path\n            d=\"M53.8374 24.6915C53.6598 24.3625 53.5154 23.7764 53.4044 22.9332C51.9718 24.3111 50.2617 25 48.2739 25C46.4971 25 45.0369 24.5373 43.8931 23.6118C42.7604 22.6761 42.194 21.4936 42.194 20.0643C42.194 18.3265 42.9047 16.9794 44.3261 16.0231C45.7587 15.0566 47.7686 14.5733 50.3561 14.5733H53.3544V13.2622C53.3544 12.2648 53.0323 11.473 52.3883 10.8869C51.7442 10.2905 50.7947 9.99229 49.5399 9.99229C48.4405 9.99229 47.5188 10.2494 46.7748 10.7635C46.0307 11.2776 45.6587 11.8997 45.6587 12.6298H42.5605C42.5605 11.7969 42.877 10.9949 43.5099 10.2236C44.154 9.44216 45.0202 8.82519 46.1085 8.37275C47.2079 7.92031 48.4127 7.69409 49.7231 7.69409C51.7997 7.69409 53.4266 8.17738 54.6037 9.14396C55.7808 10.1003 56.3916 11.4216 56.436 13.108V20.7892C56.436 22.3213 56.647 23.5398 57.069 24.4447V24.6915H53.8374ZM48.7237 22.5167C49.6898 22.5167 50.6059 22.2853 51.4721 21.8226C52.3383 21.3599 52.9657 20.7584 53.3544 20.018V16.5938H50.9391C47.1634 16.5938 45.2756 17.617 45.2756 19.6632C45.2756 20.5578 45.5976 21.2571 46.2417 21.7609C46.8858 22.2648 47.7131 22.5167 48.7237 22.5167Z\"\n            stroke=\"white\"\n            strokeWidth=\"2\"\n            mask=\"url(#path-1-outside-1)\"\n          />\n          <path\n            d=\"M64.1816 8.00257L64.2816 10.1003C65.6586 8.49614 67.4575 7.69409 69.6785 7.69409C73.4875 7.69409 75.4086 9.6838 75.4419 13.6632V24.6915H72.3603V13.6478C72.3492 12.4447 72.0494 11.5553 71.4608 10.9794C70.8834 10.4036 69.9784 10.1157 68.7457 10.1157C67.7463 10.1157 66.869 10.3625 66.1139 10.856C65.3587 11.3496 64.7702 11.9974 64.3482 12.7995V24.6915H61.2666V8.00257H64.1816Z\"\n            stroke=\"white\"\n            strokeWidth=\"2\"\n            mask=\"url(#path-1-outside-1)\"\n          />\n          <path\n            d=\"M102.743 14.3111H92.2325V22.2699H104.442V24.6915H89.0343V2.23393H104.276V4.67095H92.2325V11.8895H102.743V14.3111Z\"\n            stroke=\"white\"\n            strokeWidth=\"2\"\n            mask=\"url(#path-1-outside-1)\"\n          />\n          <path\n            d=\"M111.288 24.6915H108.207V8.00257H111.288V24.6915ZM107.957 3.57584C107.957 3.11311 108.107 2.72237 108.407 2.4036C108.718 2.08483 109.173 1.92545 109.773 1.92545C110.372 1.92545 110.828 2.08483 111.138 2.4036C111.449 2.72237 111.605 3.11311 111.605 3.57584C111.605 4.03856 111.449 4.42416 111.138 4.73265C110.828 5.04113 110.372 5.19537 109.773 5.19537C109.173 5.19537 108.718 5.04113 108.407 4.73265C108.107 4.42416 107.957 4.03856 107.957 3.57584Z\"\n            stroke=\"white\"\n            strokeWidth=\"2\"\n            mask=\"url(#path-1-outside-1)\"\n          />\n          <path\n            d=\"M122.182 20.8201L126.646 8.00257H129.795L123.332 24.6915H120.983L114.453 8.00257H117.602L122.182 20.8201Z\"\n            stroke=\"white\"\n            strokeWidth=\"2\"\n            mask=\"url(#path-1-outside-1)\"\n          />\n          <path\n            d=\"M143.62 24.6915C143.443 24.3625 143.298 23.7764 143.187 22.9332C141.755 24.3111 140.044 25 138.057 25C136.28 25 134.82 24.5373 133.676 23.6118C132.543 22.6761 131.977 21.4936 131.977 20.0643C131.977 18.3265 132.687 16.9794 134.109 16.0231C135.541 15.0566 137.551 14.5733 140.139 14.5733H143.137V13.2622C143.137 12.2648 142.815 11.473 142.171 10.8869C141.527 10.2905 140.577 9.99229 139.323 9.99229C138.223 9.99229 137.302 10.2494 136.557 10.7635C135.813 11.2776 135.441 11.8997 135.441 12.6298H132.343C132.343 11.7969 132.66 10.9949 133.293 10.2236C133.937 9.44216 134.803 8.82519 135.891 8.37275C136.991 7.92031 138.195 7.69409 139.506 7.69409C141.582 7.69409 143.209 8.17738 144.386 9.14396C145.564 10.1003 146.174 11.4216 146.219 13.108V20.7892C146.219 22.3213 146.43 23.5398 146.852 24.4447V24.6915H143.62ZM138.506 22.5167C139.473 22.5167 140.389 22.2853 141.255 21.8226C142.121 21.3599 142.748 20.7584 143.137 20.018V16.5938H140.722C136.946 16.5938 135.058 17.617 135.058 19.6632C135.058 20.5578 135.38 21.2571 136.024 21.7609C136.669 22.2648 137.496 22.5167 138.506 22.5167Z\"\n            stroke=\"white\"\n            strokeWidth=\"2\"\n            mask=\"url(#path-1-outside-1)\"\n          />\n          <path\n            d=\"M153.948 22.3625H164.492V24.6915H150.183V22.5938L160.128 10.3625H150.333V8.00257H163.992V10.0231L153.948 22.3625Z\"\n            stroke=\"white\"\n            strokeWidth=\"2\"\n            mask=\"url(#path-1-outside-1)\"\n          />\n          <path\n            d=\"M171.321 24.6915H168.24V8.00257H171.321V24.6915ZM167.99 3.57584C167.99 3.11311 168.14 2.72237 168.44 2.4036C168.75 2.08483 169.206 1.92545 169.805 1.92545C170.405 1.92545 170.86 2.08483 171.171 2.4036C171.482 2.72237 171.638 3.11311 171.638 3.57584C171.638 4.03856 171.482 4.42416 171.171 4.73265C170.86 5.04113 170.405 5.19537 169.805 5.19537C169.206 5.19537 168.75 5.04113 168.44 4.73265C168.14 4.42416 167.99 4.03856 167.99 3.57584Z\"\n            stroke=\"white\"\n            strokeWidth=\"2\"\n            mask=\"url(#path-1-outside-1)\"\n          />\n          <path\n            d=\"M187.396 24.6915C187.218 24.3625 187.073 23.7764 186.962 22.9332C185.53 24.3111 183.82 25 181.832 25C180.055 25 178.595 24.5373 177.451 23.6118C176.318 22.6761 175.752 21.4936 175.752 20.0643C175.752 18.3265 176.463 16.9794 177.884 16.0231C179.317 15.0566 181.327 14.5733 183.914 14.5733H186.912V13.2622C186.912 12.2648 186.59 11.473 185.946 10.8869C185.302 10.2905 184.353 9.99229 183.098 9.99229C181.999 9.99229 181.077 10.2494 180.333 10.7635C179.589 11.2776 179.217 11.8997 179.217 12.6298H176.119C176.119 11.7969 176.435 10.9949 177.068 10.2236C177.712 9.44216 178.578 8.82519 179.667 8.37275C180.766 7.92031 181.971 7.69409 183.281 7.69409C185.358 7.69409 186.985 8.17738 188.162 9.14396C189.339 10.1003 189.95 11.4216 189.994 13.108V20.7892C189.994 22.3213 190.205 23.5398 190.627 24.4447V24.6915H187.396ZM182.282 22.5167C183.248 22.5167 184.164 22.2853 185.03 21.8226C185.896 21.3599 186.524 20.7584 186.912 20.018V16.5938H184.497C180.721 16.5938 178.834 17.617 178.834 19.6632C178.834 20.5578 179.156 21.2571 179.8 21.7609C180.444 22.2648 181.271 22.5167 182.282 22.5167Z\"\n            stroke=\"white\"\n            strokeWidth=\"2\"\n            mask=\"url(#path-1-outside-1)\"\n          />\n          <path\n            d=\"M197.74 8.00257L197.84 10.1003C199.217 8.49614 201.016 7.69409 203.237 7.69409C207.046 7.69409 208.967 9.6838 209 13.6632V24.6915H205.918V13.6478C205.907 12.4447 205.607 11.5553 205.019 10.9794C204.441 10.4036 203.536 10.1157 202.304 10.1157C201.304 10.1157 200.427 10.3625 199.672 10.856C198.917 11.3496 198.328 11.9974 197.906 12.7995V24.6915H194.825V8.00257H197.74Z\"\n            stroke=\"white\"\n            strokeWidth=\"2\"\n            mask=\"url(#path-1-outside-1)\"\n          />\n        </svg>\n\n        <div className=\"flex links\">\n          <a href=\"https://www.linkedin.com/in/allan-e/\" target=\"_blank\" rel=\"noreferrer\">\n            LinkedIn\n          </a>\n          <a href=\"https://github.com/AllanCodes\" target=\"_blank\" rel=\"noreferrer\">\n            Github\n          </a>\n          <a href=\"https://github.com/AllanCodes\">Resume</a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}